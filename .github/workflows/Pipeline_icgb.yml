name: Workflow
on:
  push:
    branches:
     - "feature-german2"

jobs:
  SAST:
    runs-on: ubuntu-latest
    steps:

    - name: Set up Node.js 18
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '17'

    - name: Install SonarCloud Scanner locally
      run: npm install sonar-scanner --save-dev
    
  
    - name: Run SonarCloud analysis
      run: |
          npx sonar-scanner \
            -Dsonar.projectKey=ABUEHACK_Laboratorio-final \
            -Dsonar.organization=abuehack \
             -Dsonar.sources=. \
             -Dsonar.host.url=https://sonarcloud.io \
             -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
             -Dsonar.branch.name=feature-german2 

    #-----------------------SCA--------------------------------------

  SCA:
   # needs: SAST
    runs-on: ubuntu-latest
    steps:

    - name: Set up Node.js 20
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    - name: Checkout code
      uses: actions/checkout@v2        


    - name: vuln dep snyk 
      id: snyk_scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --all-projects --severity-threshold=high --json > snyk-output.json



  #-----------------------Imagen docker--------------------------------------


  DockerBuild:
    needs: [SCA, SAST]
    runs-on: ubuntu-latest
    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Docker Login
      uses: docker/login-action@v3.0.0
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build Docker
      run: |
         docker build --build-arg TMDB_V3_API_KEY=${{ secrets.TMDB_API_KEY }} --tag abuehak/lab-final-docker:latest .

    - name: Push Docker
      run: |
        docker push abuehak/lab-final-docker:latest

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'abuehak/lab-final-docker:latest'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'


    
    #-----------------------despliegue--------------------------------------

  deploy:
    needs: DockerBuild
    runs-on: self-hosted
    steps: 
      - name: Clonacion de codigo
        uses: actions/checkout@v4
      - name: Despliegue
        run: |
         kubectl apply -f ./Kubernetes/deployment.yml

  # deploy:
  #   needs: DockerBuild
  #   runs-on: self-hosted
  #   steps: 
  #       - name: Set safe.directory for Git
  #         run: git config --global --add safe.directory C:/Users/gpblancv/lab_gb/actions-runner/_work/Laboratorio-final/Laboratorio-final

  #       - name: Clonacion de codigo
  #         uses: actions/checkout@v4
        
  #       - name: Enable PowerShell script execution
  #         run: Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process -Force
  #         shell: pwsh

  #       - name: Despliegue
  #         run: |
  #           kubectl apply -f ./Kubernetes/deployment.yml



#-----------------------DAST-------------------------------------
  DAST:
    needs: deploy
    runs-on: ubuntu-latest

    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Start Application
      run: |
        docker run -d --name netflix-app -p 8080:80 abuehak/lab-final-docker:latest
        sleep 25

    - name: ZAP Scan
      uses: zaproxy/action-baseline@v0.12.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
        target: 'http://localhost:8080'
        rules_file_name: '.zap/rules.tsv'
        cmd_options: '-a'
        allow_issue_writing: false

    - name: Upload ZAP Report
      uses: actions/upload-artifact@v2
      with:
        name: zap-report
        path: zap_report.html
